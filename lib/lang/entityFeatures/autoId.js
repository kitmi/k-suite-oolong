"use strict";

require("source-map-support/register");

const FEATURE_NAME = 'autoId';

function feature(entity, args = []) {
  let typeInfo = {
    name: 'id',
    type: 'integer',
    auto: true,
    readOnly: true,
    writeOnce: true
  };
  let [options] = args;

  if (options) {
    if (typeof options === 'string') {
      options = {
        name: options
      };
    }

    Object.assign(typeInfo, options);
  }

  let fieldName = typeInfo.name;
  entity.addFeature(FEATURE_NAME, {
    field: fieldName
  }).on('beforeAddingFields', () => {
    entity.addField(fieldName, typeInfo).setKey(fieldName);
  });
}

module.exports = feature;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9sYW5nL2VudGl0eUZlYXR1cmVzL2F1dG9JZC5qcyJdLCJuYW1lcyI6WyJGRUFUVVJFX05BTUUiLCJmZWF0dXJlIiwiZW50aXR5IiwiYXJncyIsInR5cGVJbmZvIiwibmFtZSIsInR5cGUiLCJhdXRvIiwicmVhZE9ubHkiLCJ3cml0ZU9uY2UiLCJvcHRpb25zIiwiT2JqZWN0IiwiYXNzaWduIiwiZmllbGROYW1lIiwiYWRkRmVhdHVyZSIsImZpZWxkIiwib24iLCJhZGRGaWVsZCIsInNldEtleSIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBOzs7O0FBRUEsTUFBTUEsWUFBWSxHQUFHLFFBQXJCOztBQWNBLFNBQVNDLE9BQVQsQ0FBaUJDLE1BQWpCLEVBQXlCQyxJQUFJLEdBQUcsRUFBaEMsRUFBb0M7QUFDaEMsTUFBSUMsUUFBUSxHQUFHO0FBQ1hDLElBQUFBLElBQUksRUFBRSxJQURLO0FBRVhDLElBQUFBLElBQUksRUFBRSxTQUZLO0FBR1hDLElBQUFBLElBQUksRUFBRSxJQUhLO0FBSVhDLElBQUFBLFFBQVEsRUFBRSxJQUpDO0FBS1hDLElBQUFBLFNBQVMsRUFBRTtBQUxBLEdBQWY7QUFRQSxNQUFJLENBQUVDLE9BQUYsSUFBY1AsSUFBbEI7O0FBRUEsTUFBSU8sT0FBSixFQUFhO0FBQ1QsUUFBSSxPQUFPQSxPQUFQLEtBQW1CLFFBQXZCLEVBQWlDO0FBQzdCQSxNQUFBQSxPQUFPLEdBQUc7QUFBRUwsUUFBQUEsSUFBSSxFQUFFSztBQUFSLE9BQVY7QUFDSDs7QUFFREMsSUFBQUEsTUFBTSxDQUFDQyxNQUFQLENBQWNSLFFBQWQsRUFBd0JNLE9BQXhCO0FBQ0g7O0FBRUQsTUFBSUcsU0FBUyxHQUFHVCxRQUFRLENBQUNDLElBQXpCO0FBRUFILEVBQUFBLE1BQU0sQ0FBQ1ksVUFBUCxDQUFrQmQsWUFBbEIsRUFBZ0M7QUFDNUJlLElBQUFBLEtBQUssRUFBRUY7QUFEcUIsR0FBaEMsRUFFR0csRUFGSCxDQUVNLG9CQUZOLEVBRTRCLE1BQU07QUFDOUJkLElBQUFBLE1BQU0sQ0FBQ2UsUUFBUCxDQUFnQkosU0FBaEIsRUFBMkJULFFBQTNCLEVBQ0tjLE1BREwsQ0FDWUwsU0FEWjtBQUVILEdBTEQ7QUFNSDs7QUFFRE0sTUFBTSxDQUFDQyxPQUFQLEdBQWlCbkIsT0FBakIiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuY29uc3QgRkVBVFVSRV9OQU1FID0gJ2F1dG9JZCc7XG5cbi8qKlxuICogQSBydWxlIHNwZWNpZmllcyB0aGUgaWQgb2YgZW50aXR5IGlzIGF1dG9tYXRpY2FsbHkgZ2VuZXJhdGVkLlxuICogQG1vZHVsZSBFbnRpdHlGZWF0dXJlX0F1dG9JZFxuICovXG5cbi8qKlxuICogSW5pdGlhbGl6ZSB0aGUgZmVhdHVyZVxuICogQHBhcmFtIHtPb2xvbmdFbnRpdHl9IGVudGl0eSAtIEVudGl0eSB0byBhcHBseSB0aGlzIGZlYXR1cmVcbiAqIEBwYXJhbSB7YXJyYXl9IG9wdGlvbnMgLSBBdXRvIGlkIGZpZWxkIG9wdGlvbnNcbiAqIEBwcm9wZXJ0eSB7c3RyaW5nfSBbb3B0aW9ucy5uYW1lPSdpZCddIC0gRmllbGQgbmFtZVxuICogQHByb3BlcnR5IHtzdHJpbmd9IFtvcHRpb25zLnR5cGU9J2ludGVnZXInXSAtIEZpZWxkIHR5cGVcbiAqL1xuZnVuY3Rpb24gZmVhdHVyZShlbnRpdHksIGFyZ3MgPSBbXSkge1xuICAgIGxldCB0eXBlSW5mbyA9IHtcbiAgICAgICAgbmFtZTogJ2lkJyxcbiAgICAgICAgdHlwZTogJ2ludGVnZXInLFxuICAgICAgICBhdXRvOiB0cnVlLFxuICAgICAgICByZWFkT25seTogdHJ1ZSxcbiAgICAgICAgd3JpdGVPbmNlOiB0cnVlXG4gICAgfTtcblxuICAgIGxldCBbIG9wdGlvbnMgXSA9IGFyZ3M7XG5cbiAgICBpZiAob3B0aW9ucykge1xuICAgICAgICBpZiAodHlwZW9mIG9wdGlvbnMgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICBvcHRpb25zID0geyBuYW1lOiBvcHRpb25zIH07XG4gICAgICAgIH1cblxuICAgICAgICBPYmplY3QuYXNzaWduKHR5cGVJbmZvLCBvcHRpb25zKTtcbiAgICB9XG5cbiAgICBsZXQgZmllbGROYW1lID0gdHlwZUluZm8ubmFtZTtcblxuICAgIGVudGl0eS5hZGRGZWF0dXJlKEZFQVRVUkVfTkFNRSwge1xuICAgICAgICBmaWVsZDogZmllbGROYW1lICAgICAgICBcbiAgICB9KS5vbignYmVmb3JlQWRkaW5nRmllbGRzJywgKCkgPT4ge1xuICAgICAgICBlbnRpdHkuYWRkRmllbGQoZmllbGROYW1lLCB0eXBlSW5mbylcbiAgICAgICAgICAgIC5zZXRLZXkoZmllbGROYW1lKTtcbiAgICB9KTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBmZWF0dXJlOyJdfQ==