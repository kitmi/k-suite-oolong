"use strict";

require("source-map-support/register");

const path = require('path');

const Util = require('rk-utils');

const Types = require('./types');

const basePath = path.resolve(__dirname, 'auto');
let generators = Util.fs.readdirSync(basePath);
let G = {};
generators.forEach(file => {
  let f = path.join(basePath, file);

  if (Util.fs.statSync(f).isFile() && Util._.endsWith(file, '.js')) {
    let g = path.basename(file, '.js');
    G[g] = require(f);
  }
});

function auto(info, i18n) {
  if (!Types.Builtin.has(info.type)) {
    throw new Error(`Unknown primitive type: "${info.type}"."`);
  }

  if (!info.auto) {
    throw new Error(`Not an automatically generated field "${info.name}".`);
  }

  if (info.generator) {
    let name, options;

    if (typeof info.generator === 'string') {
      name = info.generator;
    } else {
      name = info.generator.name;
      options = info.generator.options;
    }

    let gtor = G[name];
    return gtor(info, i18n, options);
  }

  let typeObjerct = Types[info.type];
  return typeObjerct.generate(info, i18n);
}

;
module.exports = {
  'default': auto,
  ...G
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9ydW50aW1lL0dlbmVyYXRvcnMuanMiXSwibmFtZXMiOlsicGF0aCIsInJlcXVpcmUiLCJVdGlsIiwiVHlwZXMiLCJiYXNlUGF0aCIsInJlc29sdmUiLCJfX2Rpcm5hbWUiLCJnZW5lcmF0b3JzIiwiZnMiLCJyZWFkZGlyU3luYyIsIkciLCJmb3JFYWNoIiwiZmlsZSIsImYiLCJqb2luIiwic3RhdFN5bmMiLCJpc0ZpbGUiLCJfIiwiZW5kc1dpdGgiLCJnIiwiYmFzZW5hbWUiLCJhdXRvIiwiaW5mbyIsImkxOG4iLCJCdWlsdGluIiwiaGFzIiwidHlwZSIsIm5hbWUiLCJnZW5lcmF0b3IiLCJvcHRpb25zIiwiZ3RvciIsInR5cGVPYmplcmN0IiwiZ2VuZXJhdGUiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQTs7OztBQUVBLE1BQU1BLElBQUksR0FBR0MsT0FBTyxDQUFDLE1BQUQsQ0FBcEI7O0FBQ0EsTUFBTUMsSUFBSSxHQUFHRCxPQUFPLENBQUMsVUFBRCxDQUFwQjs7QUFDQSxNQUFNRSxLQUFLLEdBQUdGLE9BQU8sQ0FBQyxTQUFELENBQXJCOztBQUVBLE1BQU1HLFFBQVEsR0FBR0osSUFBSSxDQUFDSyxPQUFMLENBQWFDLFNBQWIsRUFBd0IsTUFBeEIsQ0FBakI7QUFFQSxJQUFJQyxVQUFVLEdBQUdMLElBQUksQ0FBQ00sRUFBTCxDQUFRQyxXQUFSLENBQW9CTCxRQUFwQixDQUFqQjtBQUNBLElBQUlNLENBQUMsR0FBRyxFQUFSO0FBRUFILFVBQVUsQ0FBQ0ksT0FBWCxDQUFtQkMsSUFBSSxJQUFJO0FBQ3ZCLE1BQUlDLENBQUMsR0FBR2IsSUFBSSxDQUFDYyxJQUFMLENBQVVWLFFBQVYsRUFBb0JRLElBQXBCLENBQVI7O0FBQ0EsTUFBSVYsSUFBSSxDQUFDTSxFQUFMLENBQVFPLFFBQVIsQ0FBaUJGLENBQWpCLEVBQW9CRyxNQUFwQixNQUFnQ2QsSUFBSSxDQUFDZSxDQUFMLENBQU9DLFFBQVAsQ0FBZ0JOLElBQWhCLEVBQXNCLEtBQXRCLENBQXBDLEVBQWtFO0FBQzlELFFBQUlPLENBQUMsR0FBR25CLElBQUksQ0FBQ29CLFFBQUwsQ0FBY1IsSUFBZCxFQUFvQixLQUFwQixDQUFSO0FBQ0FGLElBQUFBLENBQUMsQ0FBQ1MsQ0FBRCxDQUFELEdBQU9sQixPQUFPLENBQUNZLENBQUQsQ0FBZDtBQUNIO0FBQ0osQ0FORDs7QUFRQSxTQUFTUSxJQUFULENBQWNDLElBQWQsRUFBb0JDLElBQXBCLEVBQTBCO0FBQUEsT0FFbEJwQixLQUFLLENBQUNxQixPQUFOLENBQWNDLEdBQWQsQ0FBa0JILElBQUksQ0FBQ0ksSUFBdkIsQ0FGa0I7QUFBQSxvQkFFYSw0QkFBMkJKLElBQUksQ0FBQ0ksSUFBSyxLQUZsRDtBQUFBOztBQUFBLE9BR2xCSixJQUFJLENBQUNELElBSGE7QUFBQSxvQkFHTix5Q0FBeUNDLElBQUksQ0FBQ0ssSUFBTSxJQUg5QztBQUFBOztBQU10QixNQUFJTCxJQUFJLENBQUNNLFNBQVQsRUFBb0I7QUFDaEIsUUFBSUQsSUFBSixFQUFVRSxPQUFWOztBQUdBLFFBQUksT0FBT1AsSUFBSSxDQUFDTSxTQUFaLEtBQTBCLFFBQTlCLEVBQXdDO0FBQ3BDRCxNQUFBQSxJQUFJLEdBQUdMLElBQUksQ0FBQ00sU0FBWjtBQUNILEtBRkQsTUFFTztBQUNIRCxNQUFBQSxJQUFJLEdBQUdMLElBQUksQ0FBQ00sU0FBTCxDQUFlRCxJQUF0QjtBQUNBRSxNQUFBQSxPQUFPLEdBQUdQLElBQUksQ0FBQ00sU0FBTCxDQUFlQyxPQUF6QjtBQUNIOztBQUVELFFBQUlDLElBQUksR0FBR3BCLENBQUMsQ0FBQ2lCLElBQUQsQ0FBWjtBQUNBLFdBQU9HLElBQUksQ0FBQ1IsSUFBRCxFQUFPQyxJQUFQLEVBQWFNLE9BQWIsQ0FBWDtBQUNIOztBQUVELE1BQUlFLFdBQVcsR0FBRzVCLEtBQUssQ0FBQ21CLElBQUksQ0FBQ0ksSUFBTixDQUF2QjtBQUNBLFNBQU9LLFdBQVcsQ0FBQ0MsUUFBWixDQUFxQlYsSUFBckIsRUFBMkJDLElBQTNCLENBQVA7QUFDSDs7QUFBQTtBQUVEVSxNQUFNLENBQUNDLE9BQVAsR0FBaUI7QUFDYixhQUFXYixJQURFO0FBRWIsS0FBR1g7QUFGVSxDQUFqQiIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5jb25zdCBwYXRoID0gcmVxdWlyZSgncGF0aCcpO1xuY29uc3QgVXRpbCA9IHJlcXVpcmUoJ3JrLXV0aWxzJyk7XG5jb25zdCBUeXBlcyA9IHJlcXVpcmUoJy4vdHlwZXMnKTtcblxuY29uc3QgYmFzZVBhdGggPSBwYXRoLnJlc29sdmUoX19kaXJuYW1lLCAnYXV0bycpO1xuXG5sZXQgZ2VuZXJhdG9ycyA9IFV0aWwuZnMucmVhZGRpclN5bmMoYmFzZVBhdGgpO1xubGV0IEcgPSB7fTtcblxuZ2VuZXJhdG9ycy5mb3JFYWNoKGZpbGUgPT4ge1xuICAgIGxldCBmID0gcGF0aC5qb2luKGJhc2VQYXRoLCBmaWxlKTtcbiAgICBpZiAoVXRpbC5mcy5zdGF0U3luYyhmKS5pc0ZpbGUoKSAmJiBVdGlsLl8uZW5kc1dpdGgoZmlsZSwgJy5qcycpKSB7XG4gICAgICAgIGxldCBnID0gcGF0aC5iYXNlbmFtZShmaWxlLCAnLmpzJyk7XG4gICAgICAgIEdbZ10gPSByZXF1aXJlKGYpO1xuICAgIH1cbn0pO1xuXG5mdW5jdGlvbiBhdXRvKGluZm8sIGkxOG4pIHtcbiAgICBwcmU6IHtcbiAgICAgICAgVHlwZXMuQnVpbHRpbi5oYXMoaW5mby50eXBlKSwgYFVua25vd24gcHJpbWl0aXZlIHR5cGU6IFwiJHtpbmZvLnR5cGV9XCIuXCJgO1xuICAgICAgICBpbmZvLmF1dG8sIGBOb3QgYW4gYXV0b21hdGljYWxseSBnZW5lcmF0ZWQgZmllbGQgXCIkeyBpbmZvLm5hbWUgfVwiLmA7XG4gICAgfVxuXG4gICAgaWYgKGluZm8uZ2VuZXJhdG9yKSB7XG4gICAgICAgIGxldCBuYW1lLCBvcHRpb25zO1xuXG4gICAgICAgIC8vY3VzdG9taXplZCBnZW5lcmF0b3JcbiAgICAgICAgaWYgKHR5cGVvZiBpbmZvLmdlbmVyYXRvciA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgICAgIG5hbWUgPSBpbmZvLmdlbmVyYXRvcjtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIG5hbWUgPSBpbmZvLmdlbmVyYXRvci5uYW1lO1xuICAgICAgICAgICAgb3B0aW9ucyA9IGluZm8uZ2VuZXJhdG9yLm9wdGlvbnM7XG4gICAgICAgIH1cblxuICAgICAgICBsZXQgZ3RvciA9IEdbbmFtZV07XG4gICAgICAgIHJldHVybiBndG9yKGluZm8sIGkxOG4sIG9wdGlvbnMpO1xuICAgIH0gXG5cbiAgICBsZXQgdHlwZU9iamVyY3QgPSBUeXBlc1tpbmZvLnR5cGVdO1xuICAgIHJldHVybiB0eXBlT2JqZXJjdC5nZW5lcmF0ZShpbmZvLCBpMThuKTtcbn07XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICAgICdkZWZhdWx0JzogYXV0byxcbiAgICAuLi5HXG59OyJdfQ==