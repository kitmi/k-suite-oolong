"use strict";

require("source-map-support/register");

const randomstring = require("randomstring");

const any = require('./any');

module.exports = {
  name: 'text',
  alias: ['string', 'char'],
  sanitize: (value, info, i18n) => (typeof value !== 'string' ? value.toString() : value).trim(),
  defaultValue: '',
  generate: (info, i18n) => info.fixedLength ? randomstring.generate(info.fixedLength) : randomstring.generate(info.maxLength < 32 ? info.maxLength : 32),
  serialize: value => value,
  qualifiers: any.qualifiers.concat(['fixedLength', 'maxLength', 'encoding'])
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9ydW50aW1lL3R5cGVzL3RleHQuanMiXSwibmFtZXMiOlsicmFuZG9tc3RyaW5nIiwicmVxdWlyZSIsImFueSIsIm1vZHVsZSIsImV4cG9ydHMiLCJuYW1lIiwiYWxpYXMiLCJzYW5pdGl6ZSIsInZhbHVlIiwiaW5mbyIsImkxOG4iLCJ0b1N0cmluZyIsInRyaW0iLCJkZWZhdWx0VmFsdWUiLCJnZW5lcmF0ZSIsImZpeGVkTGVuZ3RoIiwibWF4TGVuZ3RoIiwic2VyaWFsaXplIiwicXVhbGlmaWVycyIsImNvbmNhdCJdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7QUFFQSxNQUFNQSxZQUFZLEdBQUdDLE9BQU8sQ0FBQyxjQUFELENBQTVCOztBQUNBLE1BQU1DLEdBQUcsR0FBR0QsT0FBTyxDQUFDLE9BQUQsQ0FBbkI7O0FBRUFFLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQjtBQUNiQyxFQUFBQSxJQUFJLEVBQUUsTUFETztBQUdiQyxFQUFBQSxLQUFLLEVBQUUsQ0FBRSxRQUFGLEVBQVksTUFBWixDQUhNO0FBS2JDLEVBQUFBLFFBQVEsRUFBRSxDQUFDQyxLQUFELEVBQVFDLElBQVIsRUFBY0MsSUFBZCxLQUF1QixDQUFDLE9BQU9GLEtBQVAsS0FBaUIsUUFBakIsR0FBNEJBLEtBQUssQ0FBQ0csUUFBTixFQUE1QixHQUErQ0gsS0FBaEQsRUFBdURJLElBQXZELEVBTHBCO0FBT2JDLEVBQUFBLFlBQVksRUFBRSxFQVBEO0FBU2JDLEVBQUFBLFFBQVEsRUFBRSxDQUFDTCxJQUFELEVBQU9DLElBQVAsS0FBZ0JELElBQUksQ0FBQ00sV0FBTCxHQUFtQmYsWUFBWSxDQUFDYyxRQUFiLENBQXNCTCxJQUFJLENBQUNNLFdBQTNCLENBQW5CLEdBQTZEZixZQUFZLENBQUNjLFFBQWIsQ0FBc0JMLElBQUksQ0FBQ08sU0FBTCxHQUFpQixFQUFqQixHQUFzQlAsSUFBSSxDQUFDTyxTQUEzQixHQUF1QyxFQUE3RCxDQVQxRTtBQVdiQyxFQUFBQSxTQUFTLEVBQUVULEtBQUssSUFBSUEsS0FYUDtBQWFiVSxFQUFBQSxVQUFVLEVBQUVoQixHQUFHLENBQUNnQixVQUFKLENBQWVDLE1BQWYsQ0FBc0IsQ0FDOUIsYUFEOEIsRUFFOUIsV0FGOEIsRUFHOUIsVUFIOEIsQ0FBdEI7QUFiQyxDQUFqQiIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5jb25zdCByYW5kb21zdHJpbmcgPSByZXF1aXJlKFwicmFuZG9tc3RyaW5nXCIpO1xuY29uc3QgYW55ID0gcmVxdWlyZSgnLi9hbnknKTtcblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gICAgbmFtZTogJ3RleHQnLFxuXG4gICAgYWxpYXM6IFsgJ3N0cmluZycsICdjaGFyJyBdLFxuXG4gICAgc2FuaXRpemU6ICh2YWx1ZSwgaW5mbywgaTE4bikgPT4gKHR5cGVvZiB2YWx1ZSAhPT0gJ3N0cmluZycgPyB2YWx1ZS50b1N0cmluZygpIDogdmFsdWUpLnRyaW0oKSxcblxuICAgIGRlZmF1bHRWYWx1ZTogJycsXG5cbiAgICBnZW5lcmF0ZTogKGluZm8sIGkxOG4pID0+IGluZm8uZml4ZWRMZW5ndGggPyByYW5kb21zdHJpbmcuZ2VuZXJhdGUoaW5mby5maXhlZExlbmd0aCkgOiByYW5kb21zdHJpbmcuZ2VuZXJhdGUoaW5mby5tYXhMZW5ndGggPCAzMiA/IGluZm8ubWF4TGVuZ3RoIDogMzIpLFxuXG4gICAgc2VyaWFsaXplOiB2YWx1ZSA9PiB2YWx1ZSxcblxuICAgIHF1YWxpZmllcnM6IGFueS5xdWFsaWZpZXJzLmNvbmNhdChbXG4gICAgICAgICdmaXhlZExlbmd0aCcsXG4gICAgICAgICdtYXhMZW5ndGgnLFxuICAgICAgICAnZW5jb2RpbmcnXG4gICAgXSlcbn07Il19