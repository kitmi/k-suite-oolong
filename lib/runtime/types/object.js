"use strict";

require("source-map-support/register");

const _ = require('rk-utils')._;

const {
  isNothing
} = require('../../utils/lang');

const any = require('./any');

module.exports = {
  name: 'object',
  alias: ['json'],
  sanitize: (value, info, i18n) => {
    if (_.isPlainObject(value)) return value;
    if (_.isObjectLike(value)) return _.toPlainObject(value);

    if (typeof value === 'string') {
      let trimmed = value.trim();

      if (trimmed.startsWith('{') && trimmed.endsWith('}')) {
        return JSON.parse(trimmed);
      }
    }

    return value;
  },
  defaultValue: {},
  generate: (info, i18n) => null,
  serialize: value => isNothing(value) ? null : JOSN.stringify(value),
  qualifiers: any.qualifiers.concat([])
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9ydW50aW1lL3R5cGVzL29iamVjdC5qcyJdLCJuYW1lcyI6WyJfIiwicmVxdWlyZSIsImlzTm90aGluZyIsImFueSIsIm1vZHVsZSIsImV4cG9ydHMiLCJuYW1lIiwiYWxpYXMiLCJzYW5pdGl6ZSIsInZhbHVlIiwiaW5mbyIsImkxOG4iLCJpc1BsYWluT2JqZWN0IiwiaXNPYmplY3RMaWtlIiwidG9QbGFpbk9iamVjdCIsInRyaW1tZWQiLCJ0cmltIiwic3RhcnRzV2l0aCIsImVuZHNXaXRoIiwiSlNPTiIsInBhcnNlIiwiZGVmYXVsdFZhbHVlIiwiZ2VuZXJhdGUiLCJzZXJpYWxpemUiLCJKT1NOIiwic3RyaW5naWZ5IiwicXVhbGlmaWVycyIsImNvbmNhdCJdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7QUFFQSxNQUFNQSxDQUFDLEdBQUdDLE9BQU8sQ0FBQyxVQUFELENBQVAsQ0FBb0JELENBQTlCOztBQUNBLE1BQU07QUFBRUUsRUFBQUE7QUFBRixJQUFnQkQsT0FBTyxDQUFDLGtCQUFELENBQTdCOztBQUNBLE1BQU1FLEdBQUcsR0FBR0YsT0FBTyxDQUFDLE9BQUQsQ0FBbkI7O0FBRUFHLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQjtBQUNiQyxFQUFBQSxJQUFJLEVBQUUsUUFETztBQUdiQyxFQUFBQSxLQUFLLEVBQUUsQ0FBRSxNQUFGLENBSE07QUFLYkMsRUFBQUEsUUFBUSxFQUFFLENBQUNDLEtBQUQsRUFBUUMsSUFBUixFQUFjQyxJQUFkLEtBQXVCO0FBQzdCLFFBQUlYLENBQUMsQ0FBQ1ksYUFBRixDQUFnQkgsS0FBaEIsQ0FBSixFQUE0QixPQUFPQSxLQUFQO0FBRTVCLFFBQUlULENBQUMsQ0FBQ2EsWUFBRixDQUFlSixLQUFmLENBQUosRUFBMkIsT0FBT1QsQ0FBQyxDQUFDYyxhQUFGLENBQWdCTCxLQUFoQixDQUFQOztBQUUzQixRQUFJLE9BQU9BLEtBQVAsS0FBaUIsUUFBckIsRUFBK0I7QUFDM0IsVUFBSU0sT0FBTyxHQUFHTixLQUFLLENBQUNPLElBQU4sRUFBZDs7QUFDQSxVQUFJRCxPQUFPLENBQUNFLFVBQVIsQ0FBbUIsR0FBbkIsS0FBMkJGLE9BQU8sQ0FBQ0csUUFBUixDQUFpQixHQUFqQixDQUEvQixFQUFzRDtBQUNsRCxlQUFPQyxJQUFJLENBQUNDLEtBQUwsQ0FBV0wsT0FBWCxDQUFQO0FBQ0g7QUFDSjs7QUFFRCxXQUFPTixLQUFQO0FBQ0gsR0FsQlk7QUFvQmJZLEVBQUFBLFlBQVksRUFBRSxFQXBCRDtBQXNCYkMsRUFBQUEsUUFBUSxFQUFFLENBQUNaLElBQUQsRUFBT0MsSUFBUCxLQUFnQixJQXRCYjtBQXdCYlksRUFBQUEsU0FBUyxFQUFHZCxLQUFELElBQVdQLFNBQVMsQ0FBQ08sS0FBRCxDQUFULEdBQW1CLElBQW5CLEdBQTBCZSxJQUFJLENBQUNDLFNBQUwsQ0FBZWhCLEtBQWYsQ0F4Qm5DO0FBMEJiaUIsRUFBQUEsVUFBVSxFQUFFdkIsR0FBRyxDQUFDdUIsVUFBSixDQUFlQyxNQUFmLENBQXNCLEVBQXRCO0FBMUJDLENBQWpCIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbmNvbnN0IF8gPSByZXF1aXJlKCdyay11dGlscycpLl87XG5jb25zdCB7IGlzTm90aGluZyB9ID0gcmVxdWlyZSgnLi4vLi4vdXRpbHMvbGFuZycpO1xuY29uc3QgYW55ID0gcmVxdWlyZSgnLi9hbnknKTtcblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gICAgbmFtZTogJ29iamVjdCcsXG5cbiAgICBhbGlhczogWyAnanNvbicgXSxcblxuICAgIHNhbml0aXplOiAodmFsdWUsIGluZm8sIGkxOG4pID0+IHtcbiAgICAgICAgaWYgKF8uaXNQbGFpbk9iamVjdCh2YWx1ZSkpIHJldHVybiB2YWx1ZTtcblxuICAgICAgICBpZiAoXy5pc09iamVjdExpa2UodmFsdWUpKSByZXR1cm4gXy50b1BsYWluT2JqZWN0KHZhbHVlKTtcblxuICAgICAgICBpZiAodHlwZW9mIHZhbHVlID09PSAnc3RyaW5nJykge1xuICAgICAgICAgICAgbGV0IHRyaW1tZWQgPSB2YWx1ZS50cmltKCk7XG4gICAgICAgICAgICBpZiAodHJpbW1lZC5zdGFydHNXaXRoKCd7JykgJiYgdHJpbW1lZC5lbmRzV2l0aCgnfScpKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIEpTT04ucGFyc2UodHJpbW1lZCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gdmFsdWU7XG4gICAgfSxcblxuICAgIGRlZmF1bHRWYWx1ZToge30sXG5cbiAgICBnZW5lcmF0ZTogKGluZm8sIGkxOG4pID0+IG51bGwsXG5cbiAgICBzZXJpYWxpemU6ICh2YWx1ZSkgPT4gaXNOb3RoaW5nKHZhbHVlKSA/IG51bGwgOiBKT1NOLnN0cmluZ2lmeSh2YWx1ZSksXG5cbiAgICBxdWFsaWZpZXJzOiBhbnkucXVhbGlmaWVycy5jb25jYXQoW1xuICAgIF0pXG59OyJdfQ==