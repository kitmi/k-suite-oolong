"use strict";

require("source-map-support/register");

const {
  withStatus,
  withExpose,
  withName,
  withExtraInfo
} = require('@k-suite/app/lib/utils/Helpers');

const HttpCode = require('http-status-codes');

class BusinessError extends withExpose(withExtraInfo(withName(Error))) {
  constructor(message, status, ...others) {
    if (arguments.length === 1 && typeof message === 'number') {
      super(HttpCode.getStatusText(message));
    } else {
      super(message, ...others);
    }

    this.status = status || HttpCode.BAD_REQUEST;
  }

}

class DataValidationError extends BusinessError {
  constructor(message, ...others) {
    super(message, HttpCode.BAD_REQUEST, ...others);
  }

}

class OolongUsageError extends withStatus(withExtraInfo(withName(Error)), HttpCode.INTERNAL_SERVER_ERROR) {}

class DsOperationError extends withStatus(withExtraInfo(withName(Error)), HttpCode.INTERNAL_SERVER_ERROR) {}

module.exports = {
  DataValidationError,
  OolongUsageError,
  DsOperationError,
  BusinessError
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9ydW50aW1lL0Vycm9ycy5qcyJdLCJuYW1lcyI6WyJ3aXRoU3RhdHVzIiwid2l0aEV4cG9zZSIsIndpdGhOYW1lIiwid2l0aEV4dHJhSW5mbyIsInJlcXVpcmUiLCJIdHRwQ29kZSIsIkJ1c2luZXNzRXJyb3IiLCJFcnJvciIsImNvbnN0cnVjdG9yIiwibWVzc2FnZSIsInN0YXR1cyIsIm90aGVycyIsImFyZ3VtZW50cyIsImxlbmd0aCIsImdldFN0YXR1c1RleHQiLCJCQURfUkVRVUVTVCIsIkRhdGFWYWxpZGF0aW9uRXJyb3IiLCJPb2xvbmdVc2FnZUVycm9yIiwiSU5URVJOQUxfU0VSVkVSX0VSUk9SIiwiRHNPcGVyYXRpb25FcnJvciIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBOzs7O0FBRUEsTUFBTTtBQUFFQSxFQUFBQSxVQUFGO0FBQWNDLEVBQUFBLFVBQWQ7QUFBMEJDLEVBQUFBLFFBQTFCO0FBQW9DQyxFQUFBQTtBQUFwQyxJQUFzREMsT0FBTyxDQUFDLGdDQUFELENBQW5FOztBQUNBLE1BQU1DLFFBQVEsR0FBR0QsT0FBTyxDQUFDLG1CQUFELENBQXhCOztBQVNBLE1BQU1FLGFBQU4sU0FBNEJMLFVBQVUsQ0FBQ0UsYUFBYSxDQUFDRCxRQUFRLENBQUNLLEtBQUQsQ0FBVCxDQUFkLENBQXRDLENBQXVFO0FBQ25FQyxFQUFBQSxXQUFXLENBQUNDLE9BQUQsRUFBVUMsTUFBVixFQUFrQixHQUFHQyxNQUFyQixFQUE2QjtBQUNwQyxRQUFJQyxTQUFTLENBQUNDLE1BQVYsS0FBcUIsQ0FBckIsSUFBMEIsT0FBT0osT0FBUCxLQUFtQixRQUFqRCxFQUEyRDtBQUN2RCxZQUFNSixRQUFRLENBQUNTLGFBQVQsQ0FBdUJMLE9BQXZCLENBQU47QUFDSCxLQUZELE1BRU87QUFDSCxZQUFNQSxPQUFOLEVBQWUsR0FBR0UsTUFBbEI7QUFDSDs7QUFFRCxTQUFLRCxNQUFMLEdBQWNBLE1BQU0sSUFBSUwsUUFBUSxDQUFDVSxXQUFqQztBQUNIOztBQVRrRTs7QUFrQnZFLE1BQU1DLG1CQUFOLFNBQWtDVixhQUFsQyxDQUFnRDtBQUM1Q0UsRUFBQUEsV0FBVyxDQUFDQyxPQUFELEVBQVUsR0FBR0UsTUFBYixFQUFxQjtBQUM1QixVQUFNRixPQUFOLEVBQWVKLFFBQVEsQ0FBQ1UsV0FBeEIsRUFBcUMsR0FBR0osTUFBeEM7QUFDSDs7QUFIMkM7O0FBWWhELE1BQU1NLGdCQUFOLFNBQStCakIsVUFBVSxDQUFDRyxhQUFhLENBQUNELFFBQVEsQ0FBQ0ssS0FBRCxDQUFULENBQWQsRUFBaUNGLFFBQVEsQ0FBQ2EscUJBQTFDLENBQXpDLENBQTBHOztBQVUxRyxNQUFNQyxnQkFBTixTQUErQm5CLFVBQVUsQ0FBQ0csYUFBYSxDQUFDRCxRQUFRLENBQUNLLEtBQUQsQ0FBVCxDQUFkLEVBQWlDRixRQUFRLENBQUNhLHFCQUExQyxDQUF6QyxDQUEwRzs7QUFHMUdFLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQjtBQUNiTCxFQUFBQSxtQkFEYTtBQUViQyxFQUFBQSxnQkFGYTtBQUdiRSxFQUFBQSxnQkFIYTtBQUliYixFQUFBQTtBQUphLENBQWpCIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbmNvbnN0IHsgd2l0aFN0YXR1cywgd2l0aEV4cG9zZSwgd2l0aE5hbWUsIHdpdGhFeHRyYUluZm8gfSA9IHJlcXVpcmUoJ0BrLXN1aXRlL2FwcC9saWIvdXRpbHMvSGVscGVycycpO1xuY29uc3QgSHR0cENvZGUgPSByZXF1aXJlKCdodHRwLXN0YXR1cy1jb2RlcycpO1xuXG4vKipcbiAqIEV4cGVjdGVkIGJ1c2luZXNzIGVycm9ycyB1cG9uIHdyb25nIHJlcXVlc3QuXG4gKiBAY2xhc3MgRXJyb3JzOkJ1c2luZXNzRXJyb3JcbiAqIEBleHRlbmRzIEVycm9yXG4gKiBAbWl4ZXMgd2l0aE5hbWVcbiAqIEBtaXhlcyB3aXRoRXh0cmFJbmZvXG4gKi9cbmNsYXNzIEJ1c2luZXNzRXJyb3IgZXh0ZW5kcyB3aXRoRXhwb3NlKHdpdGhFeHRyYUluZm8od2l0aE5hbWUoRXJyb3IpKSkgeyAgICBcbiAgICBjb25zdHJ1Y3RvcihtZXNzYWdlLCBzdGF0dXMsIC4uLm90aGVycykge1xuICAgICAgICBpZiAoYXJndW1lbnRzLmxlbmd0aCA9PT0gMSAmJiB0eXBlb2YgbWVzc2FnZSA9PT0gJ251bWJlcicpIHtcbiAgICAgICAgICAgIHN1cGVyKEh0dHBDb2RlLmdldFN0YXR1c1RleHQobWVzc2FnZSkpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgc3VwZXIobWVzc2FnZSwgLi4ub3RoZXJzKTtcbiAgICAgICAgfSAgICAgICAgXG5cbiAgICAgICAgdGhpcy5zdGF0dXMgPSBzdGF0dXMgfHwgSHR0cENvZGUuQkFEX1JFUVVFU1Q7XG4gICAgfVxufVxuXG4vKipcbiAqIEVycm9ycyBjYXVzZWQgYnkgZmFpbGluZyB0byBwYXNzIGlucHV0IHZhbGlkYXRpb25cbiAqIEBjbGFzcyBFcnJvcnM6RGF0YVZhbGlkYXRpb25FcnJvclxuICogQGV4dGVuZHMgRXJyb3JcbiAqIEBtaXhlcyB3aXRoTmFtZVxuICovXG5jbGFzcyBEYXRhVmFsaWRhdGlvbkVycm9yIGV4dGVuZHMgQnVzaW5lc3NFcnJvciB7XG4gICAgY29uc3RydWN0b3IobWVzc2FnZSwgLi4ub3RoZXJzKSB7XG4gICAgICAgIHN1cGVyKG1lc3NhZ2UsIEh0dHBDb2RlLkJBRF9SRVFVRVNULCAuLi5vdGhlcnMpO1xuICAgIH1cbn1cblxuLyoqXG4gKiBFcnJvcnMgY2F1c2VkIGJ5IHdyb25nbHkgdXNhZ2UgcGF0dGVybnMsIGUuZy4gY2FsbGVkIHdpdGggaW52YWxpZCBvcHRpb25zLlxuICogQGNsYXNzIEVycm9yczpPb2xvbmdVc2FnZUVycm9yXG4gKiBAZXh0ZW5kcyBFcnJvclxuICogQG1peGVzIHdpdGhOYW1lXG4gKi9cbmNsYXNzIE9vbG9uZ1VzYWdlRXJyb3IgZXh0ZW5kcyB3aXRoU3RhdHVzKHdpdGhFeHRyYUluZm8od2l0aE5hbWUoRXJyb3IpKSwgSHR0cENvZGUuSU5URVJOQUxfU0VSVkVSX0VSUk9SKSB7XG59XG5cbi8qKlxuICogRXJyb3JzIG9jY3VycmVkIGR1cmluZyBwZXJmb3JtaW5nIG9wZXJhdGlvbnMgYWdhaW5zdCBhIGRhdGEgc291cmNlLlxuICogQGNsYXNzIEVycm9yczpEc09wZXJhdGlvbkVycm9yXG4gKiBAZXh0ZW5kcyBFcnJvclxuICogQG1peGVzIHdpdGhOYW1lXG4gKiBAbWl4ZXMgd2l0aEV4dHJhSW5mb1xuICovXG5jbGFzcyBEc09wZXJhdGlvbkVycm9yIGV4dGVuZHMgd2l0aFN0YXR1cyh3aXRoRXh0cmFJbmZvKHdpdGhOYW1lKEVycm9yKSksIEh0dHBDb2RlLklOVEVSTkFMX1NFUlZFUl9FUlJPUikgeyAgICBcbn1cblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gICAgRGF0YVZhbGlkYXRpb25FcnJvcixcbiAgICBPb2xvbmdVc2FnZUVycm9yLFxuICAgIERzT3BlcmF0aW9uRXJyb3IsXG4gICAgQnVzaW5lc3NFcnJvclxufTsiXX0=