"use strict";

require("source-map-support/register");

const {
  withName,
  withExtraInfo
} = require('@k-suite/app/lib/utils/Helpers');

const HttpCode = require('http-status-codes');

const withHttpStatus = (Base, STATUS) => {
  var _temp;

  return _temp = class extends Base {
    constructor(...args) {
      super(...args);
      this.status = STATUS;
    }

  }, _temp;
};

class BusinessError extends withExtraInfo(withName(Error)) {
  constructor(message, status, ...others) {
    if (arguments.length === 1 && typeof message === 'number') {
      super(HttpCode.getStatusText(message));
    } else {
      super(message, ...others);
    }

    this.status = status || HttpCode.BAD_REQUEST;
  }

}

class DataValidationError extends withExtraInfo(withName(withHttpStatus(Error, HttpCode.BAD_REQUEST))) {}

class OolongUsageError extends withName(withHttpStatus(Error, HttpCode.INTERNAL_SERVER_ERROR)) {}

class DsOperationError extends withExtraInfo(withName(withHttpStatus(Error, HttpCode.INTERNAL_SERVER_ERROR))) {}

module.exports = {
  DataValidationError,
  OolongUsageError,
  DsOperationError,
  BusinessError
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9ydW50aW1lL0Vycm9ycy5qcyJdLCJuYW1lcyI6WyJ3aXRoTmFtZSIsIndpdGhFeHRyYUluZm8iLCJyZXF1aXJlIiwiSHR0cENvZGUiLCJ3aXRoSHR0cFN0YXR1cyIsIkJhc2UiLCJTVEFUVVMiLCJzdGF0dXMiLCJCdXNpbmVzc0Vycm9yIiwiRXJyb3IiLCJjb25zdHJ1Y3RvciIsIm1lc3NhZ2UiLCJvdGhlcnMiLCJhcmd1bWVudHMiLCJsZW5ndGgiLCJnZXRTdGF0dXNUZXh0IiwiQkFEX1JFUVVFU1QiLCJEYXRhVmFsaWRhdGlvbkVycm9yIiwiT29sb25nVXNhZ2VFcnJvciIsIklOVEVSTkFMX1NFUlZFUl9FUlJPUiIsIkRzT3BlcmF0aW9uRXJyb3IiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQTs7OztBQUVBLE1BQU07QUFBRUEsRUFBQUEsUUFBRjtBQUFZQyxFQUFBQTtBQUFaLElBQThCQyxPQUFPLENBQUMsZ0NBQUQsQ0FBM0M7O0FBQ0EsTUFBTUMsUUFBUSxHQUFHRCxPQUFPLENBQUMsbUJBQUQsQ0FBeEI7O0FBUUEsTUFBTUUsY0FBYyxHQUFHLENBQUNDLElBQUQsRUFBT0MsTUFBUDtBQUFBOztBQUFBLGlCQUFrQixjQUFjRCxJQUFkLENBQW1CO0FBQUE7QUFBQTtBQUFBLFdBS3hERSxNQUx3RCxHQUsvQ0QsTUFMK0M7QUFBQTs7QUFBQSxHQUFyQztBQUFBLENBQXZCOztBQWVBLE1BQU1FLGFBQU4sU0FBNEJQLGFBQWEsQ0FBQ0QsUUFBUSxDQUFDUyxLQUFELENBQVQsQ0FBekMsQ0FBMkQ7QUFDdkRDLEVBQUFBLFdBQVcsQ0FBQ0MsT0FBRCxFQUFVSixNQUFWLEVBQWtCLEdBQUdLLE1BQXJCLEVBQTZCO0FBQ3BDLFFBQUlDLFNBQVMsQ0FBQ0MsTUFBVixLQUFxQixDQUFyQixJQUEwQixPQUFPSCxPQUFQLEtBQW1CLFFBQWpELEVBQTJEO0FBQ3ZELFlBQU1SLFFBQVEsQ0FBQ1ksYUFBVCxDQUF1QkosT0FBdkIsQ0FBTjtBQUNILEtBRkQsTUFFTztBQUNILFlBQU1BLE9BQU4sRUFBZSxHQUFHQyxNQUFsQjtBQUNIOztBQUVELFNBQUtMLE1BQUwsR0FBY0EsTUFBTSxJQUFJSixRQUFRLENBQUNhLFdBQWpDO0FBQ0g7O0FBVHNEOztBQWtCM0QsTUFBTUMsbUJBQU4sU0FBa0NoQixhQUFhLENBQUNELFFBQVEsQ0FBQ0ksY0FBYyxDQUFDSyxLQUFELEVBQVFOLFFBQVEsQ0FBQ2EsV0FBakIsQ0FBZixDQUFULENBQS9DLENBQXVHOztBQVN2RyxNQUFNRSxnQkFBTixTQUErQmxCLFFBQVEsQ0FBQ0ksY0FBYyxDQUFDSyxLQUFELEVBQVFOLFFBQVEsQ0FBQ2dCLHFCQUFqQixDQUFmLENBQXZDLENBQStGOztBQVUvRixNQUFNQyxnQkFBTixTQUErQm5CLGFBQWEsQ0FBQ0QsUUFBUSxDQUFDSSxjQUFjLENBQUNLLEtBQUQsRUFBUU4sUUFBUSxDQUFDZ0IscUJBQWpCLENBQWYsQ0FBVCxDQUE1QyxDQUE4Rzs7QUFHOUdFLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQjtBQUNiTCxFQUFBQSxtQkFEYTtBQUViQyxFQUFBQSxnQkFGYTtBQUdiRSxFQUFBQSxnQkFIYTtBQUliWixFQUFBQTtBQUphLENBQWpCIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbmNvbnN0IHsgd2l0aE5hbWUsIHdpdGhFeHRyYUluZm8gfSA9IHJlcXVpcmUoJ0BrLXN1aXRlL2FwcC9saWIvdXRpbHMvSGVscGVycycpO1xuY29uc3QgSHR0cENvZGUgPSByZXF1aXJlKCdodHRwLXN0YXR1cy1jb2RlcycpO1xuXG4vKipcbiAqIEFkZHMgYSBzdGF0dXMgcHJvcGVydHkgdG8gdGhlIGNsYXNzLlxuICogQG1peGluXG4gKiBAcGFyYW0geyp9IEJhc2UgXG4gKiBAcGFyYW0geyp9IFNUQVRVUyBcbiAqL1xuY29uc3Qgd2l0aEh0dHBTdGF0dXMgPSAoQmFzZSwgU1RBVFVTKSA9PiBjbGFzcyBleHRlbmRzIEJhc2Uge1xuICAgIC8qKlxuICAgICAqIEh0dHAgc3RhdHVzIGNvZGUuXG4gICAgICogQG1lbWJlciB7bnVtYmVyfVxuICAgICAqL1xuICAgIHN0YXR1cyA9IFNUQVRVUztcbn07XG5cbi8qKlxuICogRXhwZWN0ZWQgYnVzaW5lc3MgZXJyb3JzIHVwb24gd3JvbmcgcmVxdWVzdC5cbiAqIEBjbGFzcyBFcnJvcnM6QnVzaW5lc3NFcnJvclxuICogQGV4dGVuZHMgRXJyb3JcbiAqIEBtaXhlcyB3aXRoTmFtZVxuICogQG1peGVzIHdpdGhFeHRyYUluZm9cbiAqL1xuY2xhc3MgQnVzaW5lc3NFcnJvciBleHRlbmRzIHdpdGhFeHRyYUluZm8od2l0aE5hbWUoRXJyb3IpKSB7ICAgIFxuICAgIGNvbnN0cnVjdG9yKG1lc3NhZ2UsIHN0YXR1cywgLi4ub3RoZXJzKSB7XG4gICAgICAgIGlmIChhcmd1bWVudHMubGVuZ3RoID09PSAxICYmIHR5cGVvZiBtZXNzYWdlID09PSAnbnVtYmVyJykge1xuICAgICAgICAgICAgc3VwZXIoSHR0cENvZGUuZ2V0U3RhdHVzVGV4dChtZXNzYWdlKSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBzdXBlcihtZXNzYWdlLCAuLi5vdGhlcnMpO1xuICAgICAgICB9ICAgICAgICBcblxuICAgICAgICB0aGlzLnN0YXR1cyA9IHN0YXR1cyB8fCBIdHRwQ29kZS5CQURfUkVRVUVTVDtcbiAgICB9XG59XG5cbi8qKlxuICogRXJyb3JzIGNhdXNlZCBieSBmYWlsaW5nIHRvIHBhc3MgaW5wdXQgdmFsaWRhdGlvblxuICogQGNsYXNzIEVycm9yczpEYXRhVmFsaWRhdGlvbkVycm9yXG4gKiBAZXh0ZW5kcyBFcnJvclxuICogQG1peGVzIHdpdGhOYW1lXG4gKi9cbmNsYXNzIERhdGFWYWxpZGF0aW9uRXJyb3IgZXh0ZW5kcyB3aXRoRXh0cmFJbmZvKHdpdGhOYW1lKHdpdGhIdHRwU3RhdHVzKEVycm9yLCBIdHRwQ29kZS5CQURfUkVRVUVTVCkpKSB7XG59XG5cbi8qKlxuICogRXJyb3JzIGNhdXNlZCBieSB3cm9uZ2x5IHVzYWdlIHBhdHRlcm5zLCBlLmcuIGNhbGxlZCB3aXRoIGludmFsaWQgb3B0aW9ucy5cbiAqIEBjbGFzcyBFcnJvcnM6T29sb25nVXNhZ2VFcnJvclxuICogQGV4dGVuZHMgRXJyb3JcbiAqIEBtaXhlcyB3aXRoTmFtZVxuICovXG5jbGFzcyBPb2xvbmdVc2FnZUVycm9yIGV4dGVuZHMgd2l0aE5hbWUod2l0aEh0dHBTdGF0dXMoRXJyb3IsIEh0dHBDb2RlLklOVEVSTkFMX1NFUlZFUl9FUlJPUikpIHtcbn1cblxuLyoqXG4gKiBFcnJvcnMgb2NjdXJyZWQgZHVyaW5nIHBlcmZvcm1pbmcgb3BlcmF0aW9ucyBhZ2FpbnN0IGEgZGF0YSBzb3VyY2UuXG4gKiBAY2xhc3MgRXJyb3JzOkRzT3BlcmF0aW9uRXJyb3JcbiAqIEBleHRlbmRzIEVycm9yXG4gKiBAbWl4ZXMgd2l0aE5hbWVcbiAqIEBtaXhlcyB3aXRoRXh0cmFJbmZvXG4gKi9cbmNsYXNzIERzT3BlcmF0aW9uRXJyb3IgZXh0ZW5kcyB3aXRoRXh0cmFJbmZvKHdpdGhOYW1lKHdpdGhIdHRwU3RhdHVzKEVycm9yLCBIdHRwQ29kZS5JTlRFUk5BTF9TRVJWRVJfRVJST1IpKSkgeyAgICBcbn1cblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gICAgRGF0YVZhbGlkYXRpb25FcnJvcixcbiAgICBPb2xvbmdVc2FnZUVycm9yLFxuICAgIERzT3BlcmF0aW9uRXJyb3IsXG4gICAgQnVzaW5lc3NFcnJvclxufTsiXX0=