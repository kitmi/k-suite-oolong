"use strict";

require("source-map-support/register");

const Rules = require('../../enum/Rules');

const {
  mergeCondition
} = require('../../utils/lang');

const Generators = require('../Generators');

module.exports = {
  [Rules.RULE_BEFORE_FIND]: (feature, entityModel, context) => {
    let findOptions = context.findOptions;

    if (!findOptions.$includeDeleted) {
      findOptions.$query = mergeCondition(findOptions.$query, {
        [feature.field]: {
          $ne: feature.value
        }
      });
    }

    return true;
  },
  [Rules.RULE_BEFORE_DELETE]: (feature, entityModel, context) => {
    let deleteOptions = context.deleteOptions;

    if (!deleteOptions.$physicalDeletion) {
      let {
        field,
        value,
        timestampField
      } = feature;
      let updateTo = {
        [field]: value
      };

      if (timestampField) {
        updateTo[timestampField] = Generators.default(entityModel.meta.fields[timestampField], context.i18n);
      }

      context.latest = entityModel._update_(updateTo, {
        $query: deleteOptions.$query,
        $retrieveUpdated: deleteOptions.$retrieveDeleted,
        $unboxing: deleteOptions.$unboxing,
        $byPassReadOnly: new Set([field, timestampField])
      });
      return false;
    }

    return true;
  }
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9ydW50aW1lL2VudGl0eUZlYXR1cmVzL2xvZ2ljYWxEZWxldGlvbi5qcyJdLCJuYW1lcyI6WyJSdWxlcyIsInJlcXVpcmUiLCJtZXJnZUNvbmRpdGlvbiIsIkdlbmVyYXRvcnMiLCJtb2R1bGUiLCJleHBvcnRzIiwiUlVMRV9CRUZPUkVfRklORCIsImZlYXR1cmUiLCJlbnRpdHlNb2RlbCIsImNvbnRleHQiLCJmaW5kT3B0aW9ucyIsIiRpbmNsdWRlRGVsZXRlZCIsIiRxdWVyeSIsImZpZWxkIiwiJG5lIiwidmFsdWUiLCJSVUxFX0JFRk9SRV9ERUxFVEUiLCJkZWxldGVPcHRpb25zIiwiJHBoeXNpY2FsRGVsZXRpb24iLCJ0aW1lc3RhbXBGaWVsZCIsInVwZGF0ZVRvIiwiZGVmYXVsdCIsIm1ldGEiLCJmaWVsZHMiLCJpMThuIiwibGF0ZXN0IiwiX3VwZGF0ZV8iLCIkcmV0cmlldmVVcGRhdGVkIiwiJHJldHJpZXZlRGVsZXRlZCIsIiR1bmJveGluZyIsIiRieVBhc3NSZWFkT25seSIsIlNldCJdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7QUFFQSxNQUFNQSxLQUFLLEdBQUdDLE9BQU8sQ0FBQyxrQkFBRCxDQUFyQjs7QUFDQSxNQUFNO0FBQUVDLEVBQUFBO0FBQUYsSUFBcUJELE9BQU8sQ0FBQyxrQkFBRCxDQUFsQzs7QUFDQSxNQUFNRSxVQUFVLEdBQUdGLE9BQU8sQ0FBQyxlQUFELENBQTFCOztBQU9BRyxNQUFNLENBQUNDLE9BQVAsR0FBaUI7QUFDYixHQUFDTCxLQUFLLENBQUNNLGdCQUFQLEdBQTBCLENBQUNDLE9BQUQsRUFBVUMsV0FBVixFQUF1QkMsT0FBdkIsS0FBbUM7QUFDekQsUUFBSUMsV0FBVyxHQUFHRCxPQUFPLENBQUNDLFdBQTFCOztBQUNBLFFBQUksQ0FBQ0EsV0FBVyxDQUFDQyxlQUFqQixFQUFrQztBQUM5QkQsTUFBQUEsV0FBVyxDQUFDRSxNQUFaLEdBQXFCVixjQUFjLENBQUNRLFdBQVcsQ0FBQ0UsTUFBYixFQUFxQjtBQUFFLFNBQUNMLE9BQU8sQ0FBQ00sS0FBVCxHQUFpQjtBQUFFQyxVQUFBQSxHQUFHLEVBQUVQLE9BQU8sQ0FBQ1E7QUFBZjtBQUFuQixPQUFyQixDQUFuQztBQUNIOztBQUVELFdBQU8sSUFBUDtBQUNILEdBUlk7QUFTYixHQUFDZixLQUFLLENBQUNnQixrQkFBUCxHQUE0QixDQUFDVCxPQUFELEVBQVVDLFdBQVYsRUFBdUJDLE9BQXZCLEtBQW1DO0FBQzNELFFBQUlRLGFBQWEsR0FBR1IsT0FBTyxDQUFDUSxhQUE1Qjs7QUFDQSxRQUFJLENBQUNBLGFBQWEsQ0FBQ0MsaUJBQW5CLEVBQXNDO0FBQ2xDLFVBQUk7QUFBRUwsUUFBQUEsS0FBRjtBQUFTRSxRQUFBQSxLQUFUO0FBQWdCSSxRQUFBQTtBQUFoQixVQUFtQ1osT0FBdkM7QUFDQSxVQUFJYSxRQUFRLEdBQUc7QUFDWCxTQUFDUCxLQUFELEdBQVNFO0FBREUsT0FBZjs7QUFJQSxVQUFJSSxjQUFKLEVBQW9CO0FBQ2hCQyxRQUFBQSxRQUFRLENBQUNELGNBQUQsQ0FBUixHQUEyQmhCLFVBQVUsQ0FBQ2tCLE9BQVgsQ0FBbUJiLFdBQVcsQ0FBQ2MsSUFBWixDQUFpQkMsTUFBakIsQ0FBd0JKLGNBQXhCLENBQW5CLEVBQTREVixPQUFPLENBQUNlLElBQXBFLENBQTNCO0FBQ0g7O0FBRURmLE1BQUFBLE9BQU8sQ0FBQ2dCLE1BQVIsR0FBaUJqQixXQUFXLENBQUNrQixRQUFaLENBQXFCTixRQUFyQixFQUErQjtBQUM1Q1IsUUFBQUEsTUFBTSxFQUFFSyxhQUFhLENBQUNMLE1BRHNCO0FBRTVDZSxRQUFBQSxnQkFBZ0IsRUFBRVYsYUFBYSxDQUFDVyxnQkFGWTtBQUc1Q0MsUUFBQUEsU0FBUyxFQUFFWixhQUFhLENBQUNZLFNBSG1CO0FBSTVDQyxRQUFBQSxlQUFlLEVBQUUsSUFBSUMsR0FBSixDQUFRLENBQUNsQixLQUFELEVBQVFNLGNBQVIsQ0FBUjtBQUoyQixPQUEvQixDQUFqQjtBQU9BLGFBQU8sS0FBUDtBQUNIOztBQUVELFdBQU8sSUFBUDtBQUNIO0FBaENZLENBQWpCIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbmNvbnN0IFJ1bGVzID0gcmVxdWlyZSgnLi4vLi4vZW51bS9SdWxlcycpO1xuY29uc3QgeyBtZXJnZUNvbmRpdGlvbiB9ID0gcmVxdWlyZSgnLi4vLi4vdXRpbHMvbGFuZycpO1xuY29uc3QgR2VuZXJhdG9ycyA9IHJlcXVpcmUoJy4uL0dlbmVyYXRvcnMnKTtcblxuLyoqXG4gKiBBIHJ1bGUgc3BlY2lmaWVzIHRoZSBlbnRpdHkgd2lsbCBub3QgYmUgZGVsZXRlZCBwaHlzaWNhbGx5LlxuICogQG1vZHVsZSBFbnRpdHlGZWF0dXJlUnVudGltZV9Mb2dpY2FsRGVsZXRpb25cbiAqL1xuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgICBbUnVsZXMuUlVMRV9CRUZPUkVfRklORF06IChmZWF0dXJlLCBlbnRpdHlNb2RlbCwgY29udGV4dCkgPT4ge1xuICAgICAgICBsZXQgZmluZE9wdGlvbnMgPSBjb250ZXh0LmZpbmRPcHRpb25zO1xuICAgICAgICBpZiAoIWZpbmRPcHRpb25zLiRpbmNsdWRlRGVsZXRlZCkge1xuICAgICAgICAgICAgZmluZE9wdGlvbnMuJHF1ZXJ5ID0gbWVyZ2VDb25kaXRpb24oZmluZE9wdGlvbnMuJHF1ZXJ5LCB7IFtmZWF0dXJlLmZpZWxkXTogeyAkbmU6IGZlYXR1cmUudmFsdWUgfSB9KTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIH0sXG4gICAgW1J1bGVzLlJVTEVfQkVGT1JFX0RFTEVURV06IChmZWF0dXJlLCBlbnRpdHlNb2RlbCwgY29udGV4dCkgPT4ge1xuICAgICAgICBsZXQgZGVsZXRlT3B0aW9ucyA9IGNvbnRleHQuZGVsZXRlT3B0aW9ucztcbiAgICAgICAgaWYgKCFkZWxldGVPcHRpb25zLiRwaHlzaWNhbERlbGV0aW9uKSB7XG4gICAgICAgICAgICBsZXQgeyBmaWVsZCwgdmFsdWUsIHRpbWVzdGFtcEZpZWxkIH0gPSBmZWF0dXJlO1xuICAgICAgICAgICAgbGV0IHVwZGF0ZVRvID0ge1xuICAgICAgICAgICAgICAgIFtmaWVsZF06IHZhbHVlXG4gICAgICAgICAgICB9O1xuXG4gICAgICAgICAgICBpZiAodGltZXN0YW1wRmllbGQpIHtcbiAgICAgICAgICAgICAgICB1cGRhdGVUb1t0aW1lc3RhbXBGaWVsZF0gPSBHZW5lcmF0b3JzLmRlZmF1bHQoZW50aXR5TW9kZWwubWV0YS5maWVsZHNbdGltZXN0YW1wRmllbGRdLCBjb250ZXh0LmkxOG4pO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBjb250ZXh0LmxhdGVzdCA9IGVudGl0eU1vZGVsLl91cGRhdGVfKHVwZGF0ZVRvLCB7IFxuICAgICAgICAgICAgICAgICRxdWVyeTogZGVsZXRlT3B0aW9ucy4kcXVlcnksIFxuICAgICAgICAgICAgICAgICRyZXRyaWV2ZVVwZGF0ZWQ6IGRlbGV0ZU9wdGlvbnMuJHJldHJpZXZlRGVsZXRlZCxcbiAgICAgICAgICAgICAgICAkdW5ib3hpbmc6IGRlbGV0ZU9wdGlvbnMuJHVuYm94aW5nLFxuICAgICAgICAgICAgICAgICRieVBhc3NSZWFkT25seTogbmV3IFNldChbZmllbGQsIHRpbWVzdGFtcEZpZWxkXSlcbiAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG59OyJdfQ==