"use strict";

require("source-map-support/register");

const Util = require('rk-utils');

const {
  _
} = Util;

const {
  DataValidationError
} = require('../Errors');

const Rules = require('../../enum/Rules');

module.exports = {
  [Rules.RULE_BEFORE_CREATE]: ({
    feature,
    entityModel,
    context
  }, next) => {
    _.each(feature, item => {
      if (_.every(item, fieldName => _.isNil(context.latest[fieldName]))) {
        throw new DataValidationError(`At least one of these fields ${item.map(f => Util.quote(f)).join(', ')} should not be null.`, {
          entity: entityModel.meta.name,
          fields: feature
        });
      }
    });

    return next();
  },
  [Rules.RULE_BEFORE_UPDATE]: ({
    feature,
    entityModel,
    context
  }, next) => {
    _.each(feature, item => {
      if (_.every(item, fieldName => context.latest.hasOwnProperty(fieldName) ? _.isNil(context.latest[fieldName]) : context.existing && _.isNil(context.existing[fieldName]))) {
        throw new DataValidationError(`At least one of these fields ${item.map(f => Util.quote(f)).join(', ')} should not be null.`, {
          entity: entityModel.meta.name,
          fields: feature
        });
      }
    });

    return next();
  }
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9ydW50aW1lL2VudGl0eUZlYXR1cmVzL2F0TGVhc3RPbmVOb3ROdWxsLmpzIl0sIm5hbWVzIjpbIlV0aWwiLCJyZXF1aXJlIiwiXyIsIkRhdGFWYWxpZGF0aW9uRXJyb3IiLCJSdWxlcyIsIm1vZHVsZSIsImV4cG9ydHMiLCJSVUxFX0JFRk9SRV9DUkVBVEUiLCJmZWF0dXJlIiwiZW50aXR5TW9kZWwiLCJjb250ZXh0IiwibmV4dCIsImVhY2giLCJpdGVtIiwiZXZlcnkiLCJmaWVsZE5hbWUiLCJpc05pbCIsImxhdGVzdCIsIm1hcCIsImYiLCJxdW90ZSIsImpvaW4iLCJlbnRpdHkiLCJtZXRhIiwibmFtZSIsImZpZWxkcyIsIlJVTEVfQkVGT1JFX1VQREFURSIsImhhc093blByb3BlcnR5IiwiZXhpc3RpbmciXSwibWFwcGluZ3MiOiJBQUFBOzs7O0FBRUEsTUFBTUEsSUFBSSxHQUFHQyxPQUFPLENBQUMsVUFBRCxDQUFwQjs7QUFDQSxNQUFNO0FBQUVDLEVBQUFBO0FBQUYsSUFBUUYsSUFBZDs7QUFDQSxNQUFNO0FBQUVHLEVBQUFBO0FBQUYsSUFBMEJGLE9BQU8sQ0FBQyxXQUFELENBQXZDOztBQUNBLE1BQU1HLEtBQUssR0FBR0gsT0FBTyxDQUFDLGtCQUFELENBQXJCOztBQU9BSSxNQUFNLENBQUNDLE9BQVAsR0FBaUI7QUFDYixHQUFDRixLQUFLLENBQUNHLGtCQUFQLEdBQTRCLENBQUM7QUFBRUMsSUFBQUEsT0FBRjtBQUFXQyxJQUFBQSxXQUFYO0FBQXdCQyxJQUFBQTtBQUF4QixHQUFELEVBQW9DQyxJQUFwQyxLQUE2QztBQUNyRVQsSUFBQUEsQ0FBQyxDQUFDVSxJQUFGLENBQU9KLE9BQVAsRUFBZ0JLLElBQUksSUFBSTtBQUNwQixVQUFJWCxDQUFDLENBQUNZLEtBQUYsQ0FBUUQsSUFBUixFQUFjRSxTQUFTLElBQUliLENBQUMsQ0FBQ2MsS0FBRixDQUFRTixPQUFPLENBQUNPLE1BQVIsQ0FBZUYsU0FBZixDQUFSLENBQTNCLENBQUosRUFBb0U7QUFDaEUsY0FBTSxJQUFJWixtQkFBSixDQUF5QixnQ0FBZ0NVLElBQUksQ0FBQ0ssR0FBTCxDQUFTQyxDQUFDLElBQUluQixJQUFJLENBQUNvQixLQUFMLENBQVdELENBQVgsQ0FBZCxFQUE2QkUsSUFBN0IsQ0FBa0MsSUFBbEMsQ0FBeUMsc0JBQWxHLEVBQXlIO0FBQzNIQyxVQUFBQSxNQUFNLEVBQUViLFdBQVcsQ0FBQ2MsSUFBWixDQUFpQkMsSUFEa0c7QUFFM0hDLFVBQUFBLE1BQU0sRUFBRWpCO0FBRm1ILFNBQXpILENBQU47QUFJSDtBQUNKLEtBUEQ7O0FBU0EsV0FBT0csSUFBSSxFQUFYO0FBQ0gsR0FaWTtBQWFiLEdBQUNQLEtBQUssQ0FBQ3NCLGtCQUFQLEdBQTRCLENBQUM7QUFBRWxCLElBQUFBLE9BQUY7QUFBV0MsSUFBQUEsV0FBWDtBQUF3QkMsSUFBQUE7QUFBeEIsR0FBRCxFQUFvQ0MsSUFBcEMsS0FBNkM7QUFDckVULElBQUFBLENBQUMsQ0FBQ1UsSUFBRixDQUFPSixPQUFQLEVBQWdCSyxJQUFJLElBQUk7QUFDcEIsVUFBSVgsQ0FBQyxDQUFDWSxLQUFGLENBQVFELElBQVIsRUFBY0UsU0FBUyxJQUFJTCxPQUFPLENBQUNPLE1BQVIsQ0FBZVUsY0FBZixDQUE4QlosU0FBOUIsSUFDM0JiLENBQUMsQ0FBQ2MsS0FBRixDQUFRTixPQUFPLENBQUNPLE1BQVIsQ0FBZUYsU0FBZixDQUFSLENBRDJCLEdBRTFCTCxPQUFPLENBQUNrQixRQUFSLElBQW9CMUIsQ0FBQyxDQUFDYyxLQUFGLENBQVFOLE9BQU8sQ0FBQ2tCLFFBQVIsQ0FBaUJiLFNBQWpCLENBQVIsQ0FGckIsQ0FBSixFQUdFO0FBQ0UsY0FBTSxJQUFJWixtQkFBSixDQUF5QixnQ0FBZ0NVLElBQUksQ0FBQ0ssR0FBTCxDQUFTQyxDQUFDLElBQUluQixJQUFJLENBQUNvQixLQUFMLENBQVdELENBQVgsQ0FBZCxFQUE2QkUsSUFBN0IsQ0FBa0MsSUFBbEMsQ0FBeUMsc0JBQWxHLEVBQXlIO0FBQzNIQyxVQUFBQSxNQUFNLEVBQUViLFdBQVcsQ0FBQ2MsSUFBWixDQUFpQkMsSUFEa0c7QUFFM0hDLFVBQUFBLE1BQU0sRUFBRWpCO0FBRm1ILFNBQXpILENBQU47QUFJSDtBQUNKLEtBVkQ7O0FBWUEsV0FBT0csSUFBSSxFQUFYO0FBQ0g7QUEzQlksQ0FBakIiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuY29uc3QgVXRpbCA9IHJlcXVpcmUoJ3JrLXV0aWxzJyk7XG5jb25zdCB7IF8gfSA9IFV0aWw7XG5jb25zdCB7IERhdGFWYWxpZGF0aW9uRXJyb3IgfSA9IHJlcXVpcmUoJy4uL0Vycm9ycycpO1xuY29uc3QgUnVsZXMgPSByZXF1aXJlKCcuLi8uLi9lbnVtL1J1bGVzJyk7XG5cbi8qKlxuICogQSBydWxlIHNwZWNpZmllcyBhdCBsZWFzdCBvbmUgZmllbGQgbm90IG51bGwsIGUuZy4gZW1haWwgb3IgbW9iaWxlLlxuICogQG1vZHVsZSBFbnRpdHlGZWF0dXJlUnVsZV9BdExlYXN0T25lTm90TnVsbFxuICovXG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICAgIFtSdWxlcy5SVUxFX0JFRk9SRV9DUkVBVEVdOiAoeyBmZWF0dXJlLCBlbnRpdHlNb2RlbCwgY29udGV4dCB9LCBuZXh0KSA9PiB7XG4gICAgICAgIF8uZWFjaChmZWF0dXJlLCBpdGVtID0+IHtcbiAgICAgICAgICAgIGlmIChfLmV2ZXJ5KGl0ZW0sIGZpZWxkTmFtZSA9PiBfLmlzTmlsKGNvbnRleHQubGF0ZXN0W2ZpZWxkTmFtZV0pKSkge1xuICAgICAgICAgICAgICAgIHRocm93IG5ldyBEYXRhVmFsaWRhdGlvbkVycm9yKGBBdCBsZWFzdCBvbmUgb2YgdGhlc2UgZmllbGRzICR7IGl0ZW0ubWFwKGYgPT4gVXRpbC5xdW90ZShmKSkuam9pbignLCAnKSB9IHNob3VsZCBub3QgYmUgbnVsbC5gLCB7XG4gICAgICAgICAgICAgICAgICAgIGVudGl0eTogZW50aXR5TW9kZWwubWV0YS5uYW1lLFxuICAgICAgICAgICAgICAgICAgICBmaWVsZHM6IGZlYXR1cmVcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7ICBcblxuICAgICAgICByZXR1cm4gbmV4dCgpO1xuICAgIH0sXG4gICAgW1J1bGVzLlJVTEVfQkVGT1JFX1VQREFURV06ICh7IGZlYXR1cmUsIGVudGl0eU1vZGVsLCBjb250ZXh0IH0sIG5leHQpID0+IHtcbiAgICAgICAgXy5lYWNoKGZlYXR1cmUsIGl0ZW0gPT4ge1xuICAgICAgICAgICAgaWYgKF8uZXZlcnkoaXRlbSwgZmllbGROYW1lID0+IGNvbnRleHQubGF0ZXN0Lmhhc093blByb3BlcnR5KGZpZWxkTmFtZSkgPyBcbiAgICAgICAgICAgICAgICBfLmlzTmlsKGNvbnRleHQubGF0ZXN0W2ZpZWxkTmFtZV0pIDogXG4gICAgICAgICAgICAgICAgKGNvbnRleHQuZXhpc3RpbmcgJiYgXy5pc05pbChjb250ZXh0LmV4aXN0aW5nW2ZpZWxkTmFtZV0pKSlcbiAgICAgICAgICAgICkge1xuICAgICAgICAgICAgICAgIHRocm93IG5ldyBEYXRhVmFsaWRhdGlvbkVycm9yKGBBdCBsZWFzdCBvbmUgb2YgdGhlc2UgZmllbGRzICR7IGl0ZW0ubWFwKGYgPT4gVXRpbC5xdW90ZShmKSkuam9pbignLCAnKSB9IHNob3VsZCBub3QgYmUgbnVsbC5gLCB7XG4gICAgICAgICAgICAgICAgICAgIGVudGl0eTogZW50aXR5TW9kZWwubWV0YS5uYW1lLFxuICAgICAgICAgICAgICAgICAgICBmaWVsZHM6IGZlYXR1cmVcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7ICBcblxuICAgICAgICByZXR1cm4gbmV4dCgpO1xuICAgIH1cbn07Il19