"use strict";

require("source-map-support/register");

class Bulk {
  constructor(limit, bulkAction, total) {
    this.limit = limit;
    this.itemsTotal = total;
    this.bulkAction = bulkAction;
    this.itemsPending = 0;
    this.itemsDone = 0;
    this.itemsError = 0;
    this._buffer = [];
  }

  flush() {
    if (this._buffer.length > 0) {
      let bulkItems = this._buffer.concat();

      this._buffer = [];
      let l = bulkItems.length;
      this.itemsPending += l;
      Promise.resolve(this.bulkAction(bulkItems)).then(() => {
        this.itemsDone += l;

        if (this.onProgress) {
          this.onProgress(this.itemsPending, this.itemsDone, this.itemsTotal);
        }
      }).catch(error => {
        this.itemsDone += l;
        this.itemsError += l;

        if (this.onError) {
          this.onError(error, this.itemsError);
        }
      });
    }
  }

  add(item) {
    this._buffer.push(item);

    if (this._buffer.length >= this.limit) {
      this.flush();
    }
  }

  async waitToEnd_(interval, maxRounds) {
    return waitUntil_(() => this.itemsDone >= this.itemsPending, interval, maxRounds);
  }

}

module.exports = Bulk;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy91dGlscy9CdWxrLmpzIl0sIm5hbWVzIjpbIkJ1bGsiLCJjb25zdHJ1Y3RvciIsImxpbWl0IiwiYnVsa0FjdGlvbiIsInRvdGFsIiwiaXRlbXNUb3RhbCIsIml0ZW1zUGVuZGluZyIsIml0ZW1zRG9uZSIsIml0ZW1zRXJyb3IiLCJfYnVmZmVyIiwiZmx1c2giLCJsZW5ndGgiLCJidWxrSXRlbXMiLCJjb25jYXQiLCJsIiwiUHJvbWlzZSIsInJlc29sdmUiLCJ0aGVuIiwib25Qcm9ncmVzcyIsImNhdGNoIiwiZXJyb3IiLCJvbkVycm9yIiwiYWRkIiwiaXRlbSIsInB1c2giLCJ3YWl0VG9FbmRfIiwiaW50ZXJ2YWwiLCJtYXhSb3VuZHMiLCJ3YWl0VW50aWxfIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE1BQU1BLElBQU4sQ0FBVztBQUNQQyxFQUFBQSxXQUFXLENBQUNDLEtBQUQsRUFBUUMsVUFBUixFQUFvQkMsS0FBcEIsRUFBMkI7QUFDbEMsU0FBS0YsS0FBTCxHQUFhQSxLQUFiO0FBQ0EsU0FBS0csVUFBTCxHQUFrQkQsS0FBbEI7QUFDQSxTQUFLRCxVQUFMLEdBQWtCQSxVQUFsQjtBQUVBLFNBQUtHLFlBQUwsR0FBb0IsQ0FBcEI7QUFDQSxTQUFLQyxTQUFMLEdBQWlCLENBQWpCO0FBQ0EsU0FBS0MsVUFBTCxHQUFrQixDQUFsQjtBQUNBLFNBQUtDLE9BQUwsR0FBZSxFQUFmO0FBQ0g7O0FBRURDLEVBQUFBLEtBQUssR0FBRztBQUNKLFFBQUksS0FBS0QsT0FBTCxDQUFhRSxNQUFiLEdBQXNCLENBQTFCLEVBQTZCO0FBQ3pCLFVBQUlDLFNBQVMsR0FBRyxLQUFLSCxPQUFMLENBQWFJLE1BQWIsRUFBaEI7O0FBQ0EsV0FBS0osT0FBTCxHQUFlLEVBQWY7QUFFQSxVQUFJSyxDQUFDLEdBQUdGLFNBQVMsQ0FBQ0QsTUFBbEI7QUFDQSxXQUFLTCxZQUFMLElBQXFCUSxDQUFyQjtBQUVBQyxNQUFBQSxPQUFPLENBQUNDLE9BQVIsQ0FBZ0IsS0FBS2IsVUFBTCxDQUFnQlMsU0FBaEIsQ0FBaEIsRUFBNENLLElBQTVDLENBQWlELE1BQU07QUFDbkQsYUFBS1YsU0FBTCxJQUFrQk8sQ0FBbEI7O0FBRUEsWUFBSSxLQUFLSSxVQUFULEVBQXFCO0FBQ2pCLGVBQUtBLFVBQUwsQ0FBZ0IsS0FBS1osWUFBckIsRUFBbUMsS0FBS0MsU0FBeEMsRUFBbUQsS0FBS0YsVUFBeEQ7QUFDSDtBQUNKLE9BTkQsRUFNR2MsS0FOSCxDQU1TQyxLQUFLLElBQUk7QUFDZCxhQUFLYixTQUFMLElBQWtCTyxDQUFsQjtBQUNBLGFBQUtOLFVBQUwsSUFBbUJNLENBQW5COztBQUVBLFlBQUksS0FBS08sT0FBVCxFQUFrQjtBQUNkLGVBQUtBLE9BQUwsQ0FBYUQsS0FBYixFQUFvQixLQUFLWixVQUF6QjtBQUNIO0FBQ0osT0FiRDtBQWNIO0FBQ0o7O0FBRURjLEVBQUFBLEdBQUcsQ0FBQ0MsSUFBRCxFQUFPO0FBQ04sU0FBS2QsT0FBTCxDQUFhZSxJQUFiLENBQWtCRCxJQUFsQjs7QUFFQSxRQUFJLEtBQUtkLE9BQUwsQ0FBYUUsTUFBYixJQUF1QixLQUFLVCxLQUFoQyxFQUF1QztBQUNuQyxXQUFLUSxLQUFMO0FBQ0g7QUFDSjs7QUFFRCxRQUFNZSxVQUFOLENBQWlCQyxRQUFqQixFQUEyQkMsU0FBM0IsRUFBc0M7QUFDbEMsV0FBT0MsVUFBVSxDQUFDLE1BQU0sS0FBS3JCLFNBQUwsSUFBa0IsS0FBS0QsWUFBOUIsRUFBNENvQixRQUE1QyxFQUFzREMsU0FBdEQsQ0FBakI7QUFDSDs7QUEvQ007O0FBa0RYRSxNQUFNLENBQUNDLE9BQVAsR0FBaUI5QixJQUFqQiIsInNvdXJjZXNDb250ZW50IjpbImNsYXNzIEJ1bGsge1xuICAgIGNvbnN0cnVjdG9yKGxpbWl0LCBidWxrQWN0aW9uLCB0b3RhbCkge1xuICAgICAgICB0aGlzLmxpbWl0ID0gbGltaXQ7IFxuICAgICAgICB0aGlzLml0ZW1zVG90YWwgPSB0b3RhbDtcbiAgICAgICAgdGhpcy5idWxrQWN0aW9uID0gYnVsa0FjdGlvbjtcblxuICAgICAgICB0aGlzLml0ZW1zUGVuZGluZyA9IDA7XG4gICAgICAgIHRoaXMuaXRlbXNEb25lID0gMDtcbiAgICAgICAgdGhpcy5pdGVtc0Vycm9yID0gMDtcbiAgICAgICAgdGhpcy5fYnVmZmVyID0gW107ICAgICAgICAgICAgICBcbiAgICB9XG5cbiAgICBmbHVzaCgpIHsgICAgICAgIFxuICAgICAgICBpZiAodGhpcy5fYnVmZmVyLmxlbmd0aCA+IDApIHtcbiAgICAgICAgICAgIGxldCBidWxrSXRlbXMgPSB0aGlzLl9idWZmZXIuY29uY2F0KCk7XG4gICAgICAgICAgICB0aGlzLl9idWZmZXIgPSBbXTtcblxuICAgICAgICAgICAgbGV0IGwgPSBidWxrSXRlbXMubGVuZ3RoO1xuICAgICAgICAgICAgdGhpcy5pdGVtc1BlbmRpbmcgKz0gbDtcblxuICAgICAgICAgICAgUHJvbWlzZS5yZXNvbHZlKHRoaXMuYnVsa0FjdGlvbihidWxrSXRlbXMpKS50aGVuKCgpID0+IHtcbiAgICAgICAgICAgICAgICB0aGlzLml0ZW1zRG9uZSArPSBsO1xuXG4gICAgICAgICAgICAgICAgaWYgKHRoaXMub25Qcm9ncmVzcykge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLm9uUHJvZ3Jlc3ModGhpcy5pdGVtc1BlbmRpbmcsIHRoaXMuaXRlbXNEb25lLCB0aGlzLml0ZW1zVG90YWwpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pLmNhdGNoKGVycm9yID0+IHtcbiAgICAgICAgICAgICAgICB0aGlzLml0ZW1zRG9uZSArPSBsO1xuICAgICAgICAgICAgICAgIHRoaXMuaXRlbXNFcnJvciArPSBsO1xuXG4gICAgICAgICAgICAgICAgaWYgKHRoaXMub25FcnJvcikge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLm9uRXJyb3IoZXJyb3IsIHRoaXMuaXRlbXNFcnJvcik7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBhZGQoaXRlbSkge1xuICAgICAgICB0aGlzLl9idWZmZXIucHVzaChpdGVtKTtcblxuICAgICAgICBpZiAodGhpcy5fYnVmZmVyLmxlbmd0aCA+PSB0aGlzLmxpbWl0KSB7XG4gICAgICAgICAgICB0aGlzLmZsdXNoKCk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBhc3luYyB3YWl0VG9FbmRfKGludGVydmFsLCBtYXhSb3VuZHMpIHtcbiAgICAgICAgcmV0dXJuIHdhaXRVbnRpbF8oKCkgPT4gdGhpcy5pdGVtc0RvbmUgPj0gdGhpcy5pdGVtc1BlbmRpbmcsIGludGVydmFsLCBtYXhSb3VuZHMpO1xuICAgIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBCdWxrOyJdfQ==